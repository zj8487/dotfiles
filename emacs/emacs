;; -*- mode: Lisp; fill-column: 75; comment-column: 50; -*-

;; Turn off mouse interface early in startup to avoid momentary display
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))

;; No splash screen please ... jeez
(setq inhibit-startup-message t)

;; Write backup files to own directory
(setq backup-directory-alist
      `(("." . ,(expand-file-name
                 (concat user-emacs-directory "backups")))))

;; Make backups of files, even when they're in version control
(setq vc-make-backup-files t)

;; Save point position between sessions
(require 'saveplace)
(setq-default save-place t)
(setq save-place-file (expand-file-name ".places" user-emacs-directory))

;; Add package archives
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)

;; Color theme stuff
(add-to-list 'load-path "~/dotfiles/emacs/color-theme")

(require 'color-theme)
(color-theme-initialize)
;(color-theme-robin-hood)
;(color-theme-deep-blue)
;(color-theme-hober)
(color-theme-gray30)
(setq my-color-themes (list 'color-theme-billw 'color-theme-robin-hood 
                            'color-theme-deep-blue 'color-theme-hober))

(add-to-list 'load-path "~/dotfiles/emacs")
(load-library "comment-out-line")

(add-to-list 'load-path "~/dotfiles/emacs/doremi")
(require 'doremi-cmd)

(defun fullscreen (&optional f)
       (interactive)
       (x-send-client-message nil 0 nil "_NET_WM_STATE" 32
	    		 '(2 "_NET_WM_STATE_MAXIMIZED_VERT" 0))
       (x-send-client-message nil 0 nil "_NET_WM_STATE" 32
	    		 '(2 "_NET_WM_STATE_MAXIMIZED_HORZ" 0)))

; Show which parenthesis belongs together upon placing the cursor on one of them
(show-paren-mode t)

; Always follow symbolic links to version controlled files
(setq vc-follow-symlinks t)

; Line and column mode
(setq line-number-mode t)
(setq column-number-mode t)

; Enabled downcase-region command (C-x C-l)
(put 'downcase-region 'disabled nil)

; Enabled upcase-region command (C-x C-u)
(put 'upcase-region 'disabled nil)

(defun scroll-one-line-up (amount)
  "Scroll text of current window upward one line"
  (interactive "p")
  (scroll-up amount))

(defun scroll-one-line-down (amount)
  "Scroll text of current window downward one line"
  (interactive "p")
  (scroll-down amount))

(defun move-to-previous-window ()
  (interactive)
  (select-window (previous-window)))

(defun move-to-next-window ()
  (interactive)
  (select-window (next-window)))

(global-set-key "\C-c\C-z" 'suspend-frame)
(global-set-key "\C-xl" 'electric-buffer-list)
(global-set-key "\eg" 'goto-line)

(global-set-key "\C-z" 'scroll-one-line-up)
(global-set-key "\ez" 'scroll-one-line-down)
(global-set-key (kbd "C-,") 'move-to-previous-window)
(global-set-key (kbd "C-.") 'move-to-next-window)

(global-set-key (quote [67108909]) 'shrink-window);; C--
(global-set-key (quote [M-up]) `shrink-window);; M-up
(global-set-key (quote [67108907]) 'enlarge-window);; C-+ 
(global-set-key (quote [M-down]) `enlarge-window);; M-down

;; js3 mode
(add-to-list 'load-path "~/dotfiles/emacs/js3-mode")
(autoload 'js3-mode "js3" nil t)
(add-to-list 'auto-mode-alist '("\\.js$" . js3-mode))

; Install jshint-mode (uses flymake)
(add-to-list 'load-path "~/src/jshint-mode")
(require 'flymake-jshint)
(add-hook 'js3-mode-hook 
	  (lambda () 
	  	  (flymake-mode t)
	  	  (local-set-key "\en" 'flymake-goto-next-error)
	  	  (local-set-key "\ep" 'flymake-goto-prev-error)
	  )
)

;; Turns on flymake for all files which have a flymake mode
(add-hook 'find-file-hook 'flymake-find-file-hook)

;; Flymake log level. Useful when trouble shooting flymake problems
;;(setq flymake-log-level 3)

;; Start emacs in full screen mode
(fullscreen)

;; Font used
(set-default-font "Source Code Pro 8")

;; Use spaces and not fecking tabs when auto indenting!
(setq-default indent-tabs-mode nil)

;; Diminish modeline clutter
(require 'diminish)
;(diminish 'wrap-region-mode)
;(diminish 'yas/minor-mode)

;; Elisp go-to-definition with M-. and back again with M-,
(autoload 'elisp-slime-nav-mode "elisp-slime-nav")
(add-hook 'emacs-lisp-mode-hook (lambda () (elisp-slime-nav-mode t)))
(eval-after-load 'elisp-slime-nav '(diminish 'elisp-slime-nav-mode))

;; Show error/warning message in status buffer
(custom-set-variables

 '(help-at-pt-timer-delay 0.5)
 '(help-at-pt-display-when-idle '(flymake-overlay))

 '(jshint-mode-jshintrc "/home/magnus/dotfiles/js/jshintrc.json")

 '(js3-auto-indent-p t)          ; it's nice for commas to right themselves.
 '(js3-enter-indents-newline t)  ; don't need to push tab before typing
 ;;'(js3-indent-on-enter-key t)    ; fix indenting before moving on
 '(js3-mirror-mode t)
 ;;'(js3-indent-dots t)
 ;;'(js3-indent-level 1)
 ;;'(js3-lazy-commas t)
 ;;'(js3-lazy-operators t)
 ;;'(js3-lazy-dots t)
 ;;'(js3-expr-indent-offset 2)
 ;;'(js3-paren-indent-offset 2)
 ;;'(js3-square-indent-offset 2)
 ;;'(js3-curly-indent-offset 2)
)

