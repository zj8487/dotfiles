(add-to-list 'load-path "~/dotfiles/emacs/color-theme")

(require 'color-theme)
(color-theme-initialize)
;(color-theme-robin-hood)
;(color-theme-deep-blue)
;(color-theme-hober)
(color-theme-gray30)
(setq my-color-themes (list 'color-theme-billw 'color-theme-robin-hood 
                            'color-theme-deep-blue 'color-theme-hober))

(add-to-list 'load-path "~/dotfiles/emacs")
(load-library "comment-out-line")

(add-to-list 'load-path "~/dotfiles/emacs/doremi")
(require 'doremi-cmd)

(defun fullscreen (&optional f)
       (interactive)
       (x-send-client-message nil 0 nil "_NET_WM_STATE" 32
	    		 '(2 "_NET_WM_STATE_MAXIMIZED_VERT" 0))
       (x-send-client-message nil 0 nil "_NET_WM_STATE" 32
	    		 '(2 "_NET_WM_STATE_MAXIMIZED_HORZ" 0)))

; Show which parenthesis belongs together upon placing the cursor on one of them
(show-paren-mode t)

; Hide menu bar
(menu-bar-mode -1)

; Hide toolbar
(tool-bar-mode -1)

; Hide scrollbar
(scroll-bar-mode -1)

; Always follow symbolic links to version controlled files
(setq vc-follow-symlinks t)

; Line and column mode
(setq line-number-mode t)
(setq column-number-mode t)

; Enabled downcase-region command (C-x C-l)
(put 'downcase-region 'disabled nil)

; Enabled upcase-region command (C-x C-u)
(put 'upcase-region 'disabled nil)

(defun scroll-one-line-up (amount)
  "Scroll text of current window upward one line"
  (interactive "p")
  (scroll-up amount))

(defun scroll-one-line-down (amount)
  "Scroll text of current window downward one line"
  (interactive "p")
  (scroll-down amount))

(defun move-to-previous-window ()
  (interactive)
  (select-window (previous-window)))

(defun move-to-next-window ()
  (interactive)
  (select-window (next-window)))

(global-set-key "\C-c\C-z" 'suspend-frame)
(global-set-key "\C-xl" 'electric-buffer-list)
(global-set-key "\eg" 'goto-line)

(global-set-key "\C-z" 'scroll-one-line-up)
(global-set-key "\ez" 'scroll-one-line-down)
(global-set-key (kbd "C-,") 'move-to-previous-window)
(global-set-key (kbd "C-.") 'move-to-next-window)

(global-set-key (quote [67108909]) 'shrink-window);; C--
(global-set-key (quote [M-up]) `shrink-window);; M-up
(global-set-key (quote [67108907]) 'enlarge-window);; C-+ 
(global-set-key (quote [M-down]) `enlarge-window);; M-down

; Two space identation for JavaScript
(setq js-indent-level 2)

; Install jshint-mode
(add-to-list 'load-path "~/src/jshint-mode")
(require 'flymake-jshint)
(add-hook 'js-mode-hook 
	  (lambda () 
	  	  (flymake-mode t)
	  	  (local-set-key "\en" 'flymake-goto-next-error)
	  	  (local-set-key "\ep" 'flymake-goto-prev-error)
	  )
)


;; Turns on flymake for all files which have a flymake mode
(add-hook 'find-file-hook 'flymake-find-file-hook)

;; Show error/warning message in status buffer
(custom-set-variables
 '(help-at-pt-timer-delay 0.5)
 '(help-at-pt-display-when-idle '(flymake-overlay)))

